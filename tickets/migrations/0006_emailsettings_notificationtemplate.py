# Generated by Django 5.2.1 on 2025-05-25 02:41

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tickets', '0005_comment_author_ip_address_ticket_reporter_ip_address_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, help_text='Если неактивно, никакие email отправляться не будут, даже если отдельные уведомления включены.', verbose_name='Включить отправку Email уведомлений')),
                ('smtp_host', models.CharField(max_length=255, verbose_name='SMTP Хост')),
                ('smtp_port', models.PositiveIntegerField(default=587, verbose_name='SMTP Порт')),
                ('smtp_user', models.CharField(blank=True, max_length=255, null=True, verbose_name='SMTP Пользователь (логин)')),
                ('smtp_password', models.CharField(blank=True, help_text='Оставьте пустым, если аутентификация не требуется. ВНИМАНИЕ: Пароль будет храниться в базе данных.', max_length=255, null=True, verbose_name='SMTP Пароль')),
                ('use_tls', models.BooleanField(default=True, verbose_name='Использовать STARTTLS')),
                ('use_ssl', models.BooleanField(default=False, verbose_name='Использовать SSL/TLS (прямое соединение)')),
                ('default_from_email', models.EmailField(help_text="Например, 'noreply@yourdomain.com' или 'helpdesk@yourdomain.com'", max_length=254, verbose_name='Email отправителя по умолчанию')),
                ('test_email_recipient', models.EmailField(blank=True, help_text='Укажите email для отправки тестового сообщения при сохранении настроек.', max_length=254, null=True, verbose_name='Email для тестового письма')),
            ],
            options={
                'verbose_name': 'Настройки Email (SMTP)',
                'verbose_name_plural': 'Настройки Email (SMTP)',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_code', models.SlugField(help_text="Уникальный идентификатор события, например, 'new_ticket_for_user', 'new_comment_for_agent'.", max_length=100, unique=True, verbose_name='Код события (для системы)')),
                ('name', models.CharField(max_length=255, verbose_name='Название уведомления (для админки)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание (когда срабатывает)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Уведомление активно')),
                ('recipient_type', models.CharField(choices=[('user', 'Пользователь (заявитель)'), ('agent', 'Агент (исполнитель)'), ('project_email', 'Email проекта'), ('all_project_agents', 'Все агенты проекта')], max_length=20, verbose_name='Тип получателя')),
                ('subject_template', models.CharField(help_text='Можно использовать переменные Django шаблонов, например: {{ ticket.ticket_id_display }}', max_length=255, verbose_name='Шаблон темы письма')),
                ('body_template_html', models.TextField(help_text='Можно использовать переменные Django шаблонов. Например: <p>Заявка {{ ticket.title }} создана.</p>', verbose_name='Шаблон тела письма (HTML)')),
            ],
            options={
                'verbose_name': 'Шаблон Email уведомления',
                'verbose_name_plural': 'Шаблоны Email уведомлений',
                'ordering': ['name'],
            },
        ),
    ]
